/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const NotificationLazyImport = createFileRoute('/notification')()
const IndexLazyImport = createFileRoute('/')()
const MyPageIndexLazyImport = createFileRoute('/my-page/')()
const MyPageIntroEditLazyImport = createFileRoute('/my-page/intro-edit')()

// Create/Update Routes

const NotificationLazyRoute = NotificationLazyImport.update({
  path: '/notification',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notification.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MyPageIndexLazyRoute = MyPageIndexLazyImport.update({
  path: '/my-page/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/my-page/index.lazy').then((d) => d.Route))

const MyPageIntroEditLazyRoute = MyPageIntroEditLazyImport.update({
  path: '/my-page/intro-edit',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/my-page/intro-edit.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/notification': {
      id: '/notification'
      path: '/notification'
      fullPath: '/notification'
      preLoaderRoute: typeof NotificationLazyImport
      parentRoute: typeof rootRoute
    }
    '/my-page/intro-edit': {
      id: '/my-page/intro-edit'
      path: '/my-page/intro-edit'
      fullPath: '/my-page/intro-edit'
      preLoaderRoute: typeof MyPageIntroEditLazyImport
      parentRoute: typeof rootRoute
    }
    '/my-page/': {
      id: '/my-page/'
      path: '/my-page'
      fullPath: '/my-page'
      preLoaderRoute: typeof MyPageIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  NotificationLazyRoute,
  MyPageIntroEditLazyRoute,
  MyPageIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/notification",
        "/my-page/intro-edit",
        "/my-page/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/notification": {
      "filePath": "notification.lazy.tsx"
    },
    "/my-page/intro-edit": {
      "filePath": "my-page/intro-edit.lazy.tsx"
    },
    "/my-page/": {
      "filePath": "my-page/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
